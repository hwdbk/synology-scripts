#!/bin/bash

if [[ $1 == -a ]] ; then filter=() ; shift ; else filter=( ! -path "*/#recycle/*" ! -path "*-/*" ) ; fi

if (( $# == 0 )) ; then
	echo "$(basename "$0"): nothing to scan" >&2
	echo "usage: $(basename "$0") [-a] file|dir [...]" >&2
	exit 1
fi

# stats
#nscan=0 # number of files scanned tracker
#sscan=0 # file size scanned tracker
# sorry: no stats tracker here because using "while read f ; do ... done < <(find ...)" is so much slower than the gfind -printf oneliner
# use wc -l and countsize_filelist on the output to get stats

for i in "$@" ; do

if [ -e "$i" ] ; then
	# use GNU find -printf format
	# one could use date and ls to get the moddate and size, but getting nanosecond resolution is a problem
	# stat could also be used and does show nanosecond resolution, but stat tends to have different format specifiers on different systems
	find "$i" -type f \( "${filter[@]}" ! -path "*/@eaDir/*" ! -path "*/.AppleDB/*" ! -name ".DS_Store" \) -printf "%TY%Tm%Td_%TH%TM%TS\t%s\t-\t%p\n"  | sed -e 's/\(^........_......\..........\)./\1/'
else
	echo "usage: mkfilelist_fast file|directory [file|directory ...]" >&2
	echo "print on stdout a list with" >&2
	echo "modification date<tab>file length<tab>-<tab>file path" >&2
	echo "(it prints a '-' where mkfilelist_md5 would print the md5sum to keep the file format compatible)" >&2
fi

done

#EOF
